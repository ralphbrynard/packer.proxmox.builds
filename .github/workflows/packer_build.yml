name: Packer Build

on:
  # trunk-ignore(yamllint/empty-values)
  workflow_dispatch:

permissions: read-all

env:
  PACKER_VERSION: 1.9.4
  vm_nic_vlan: 13
  vm_scsi_controller: virtio-scsi-single
  http_ip: ${{ secrets.HTTP_IP }}
  build_username: ${{ secrets.BUILD_USERNAME }}
  build_password: ${{ secrets.BUILD_PASSWORD }}
  ansible_username: ${{ secrets.ANSIBLE_USERNAME }}
  ansible_password: ${{ secrets.ANSIBLE_PASSWORD }}
  enable_cloud_init: true
  cloud_init_storage_pool: ${{ secrets.CLOUD_INIT_STORAGE_POOL }}
  vm_inst_os_kms_key_pro: ${{ secrets.VM_INST_OS_KMS_KEY_PRO }}
  vm_inst_os_kms_key_ent: ${{ secrets.VM_INST_OS_KMS_KEY_ENT }}

jobs:
   list-files:
      runs-on: self-hosted
      strategy:
         fail-fast: true
         matrix:
            build_path:
               - ./builds/windows/desktop/11
      outputs:
         paths: ${{ steps.list-files.outputs.paths }}

      steps:
        - name: List Windows Build Files
          id: list-files
          uses: mirko-felice/list-files-action@v3.0.5
          with:
            repo: ${{ github.repository }}
            ref: ${{ github.ref }}
            path: ${{ matrix.build_path }}
            ext: .pkr.hcl
   packer-win-build:
      needs: list-files
      runs-on: self-hosted
      strategy:
         fail-fast: true
         matrix:
           paths: ${{ fromJson(needs.list-files.outputs.paths) }}

      steps:
         - name: Checkout
           uses: actions/checkout@v3
         - name: Setup Packer
           uses: hashicorp/setup-packer@main
           id: setup
           with:
            version: ${{ env.PACKER_VERSION }}
         - name: Packer Init
           id: init
           run: packer init ${{ matrix.paths }}
         - name: Packer Build
           id: build
           run: |
            packer build \
               -var 'build_version=${{ github.ref_name }}' \
               -var 'proxmox_url=${{ secrets.PROXMOX_URL }}' \
               -var 'proxmox_node=${{ secrets.PROXMOX_NODE }}' \
               -var 'proxmox_username=${{ secrets.PROXMOX_USERNAME }}' \
               -var 'proxmox_api_token=${{ secrets.PROXMOX_API_TOKEN }}' \
               -var 'proxmox_api_token_id=${{ secrets.PROXMOX_API_TOKEN_ID }}' \
               -var 'proxmox_resource_pool=packer' \
               -var 'vm_mem_size=4096' \
               -var 'vm_cpu_core_count=2' \
               -var 'vm_cpu_count=2' \
               -var 'vm_nic_vlan=${{ env.vm_nic_vlan }}' \
               -var 'vm_scsi_controller=virtio-scsi-single' \
               -var 'vm_storage_pool=local-lvm' \
               -var 'vm_disk_type=scsi' \
               -var 'enable_cloud_init=${{ env.enable_cloud_init }}' \
               -var 'cloud_init_storage_pool=${{ secrets.CLOUD_INIT_STORAGE_POOL }}' \
               -var 'http_ip=${{ secrets.HTTP_IP }}' \
               -var 'build_username=${{ secrets.BUILD_USERNAME }}' \
               -var 'build_password=${{ secrets.BUILD_PASSWORD }}' \
               -var 'ansible_username=${{ secrets.ANSIBLE_USERNAME }}' \
               -var 'ansible_password=${{ secrets.ANSIBLE_PASSWORD }}' \
               -var 'vm_inst_os_kms_key_pro=${{ secrets.VM_INST_OS_KMS_KEY_PRO }}' \
               -var 'vm_inst_os_kms_key_ent=${{ secrets.VM_INST_OS_KMS_KEY_ENT }}' \
               ${{ matrix.paths }}
